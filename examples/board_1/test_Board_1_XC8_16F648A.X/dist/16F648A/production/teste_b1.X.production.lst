

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Aug 13 21:56:24 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F648A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	swtext1,local,class=CONST,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F648A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  008C                     	;# 
    77  008E                     	;# 
    78  0092                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009F                     	;# 
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  008C                     	;# 
   114  008E                     	;# 
   115  0092                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009F                     	;# 
   123  0005                     _PORTA	set	5
   124  0006                     _PORTB	set	6
   125  001F                     _CMCON	set	31
   126  002C                     _RA4	set	44
   127  002B                     _RA3	set	43
   128  002A                     _RA2	set	42
   129  0029                     _RA1	set	41
   130  0028                     _RA0	set	40
   131  0086                     _TRISB	set	134
   132  0085                     _TRISA	set	133
   133  009D                     _EECON2	set	157
   134  009A                     _EEDATA	set	154
   135  009C                     _EECON1bits	set	156
   136  009B                     _EEADR	set	155
   137                           
   138                           ; #config settings
   139  0000                     
   140                           	psect	cinit
   141  0013                     start_initialization:	
   142  0013                     __initialization:	
   143  0013                     end_of_initialization:	
   144                           ;End of C runtime variable initialization code
   145                           
   146  0013                     __end_of__initialization:	
   147  0013  0183               	clrf	3
   148  0014  118A  2816         	ljmp	_main	;jump to C main() function
   149                           
   150                           	psect	cstackCOMMON
   151  0070                     __pcstackCOMMON:	
   152  0070                     ?_display7s:	
   153  0070                     ?_isr:	
   154                           ; 1 bytes @ 0x0
   155                           
   156  0070                     ??_isr:	
   157                           ; 1 bytes @ 0x0
   158                           
   159  0070                     ?_main:	
   160                           ; 1 bytes @ 0x0
   161                           
   162                           
   163                           ; 1 bytes @ 0x0
   164  0070                     	ds	4
   165  0074                     ?_atraso_ms:	
   166  0074                     ??_display7s:	
   167                           ; 1 bytes @ 0x4
   168                           
   169  0074                     display7s@v:	
   170                           ; 1 bytes @ 0x4
   171                           
   172  0074                     atraso_ms@valor:	
   173                           ; 1 bytes @ 0x4
   174                           
   175                           
   176                           ; 2 bytes @ 0x4
   177  0074                     	ds	2
   178  0076                     ??_atraso_ms:	
   179                           
   180                           ; 1 bytes @ 0x6
   181  0076                     	ds	1
   182  0077                     atraso_ms@i:	
   183                           
   184                           ; 2 bytes @ 0x7
   185  0077                     	ds	2
   186  0079                     atraso_ms@j:	
   187                           
   188                           ; 1 bytes @ 0x9
   189  0079                     	ds	1
   190                           
   191                           	psect	cstackBANK0
   192  0020                     __pcstackBANK0:	
   193  0020                     ??_main:	
   194                           
   195                           ; 1 bytes @ 0x0
   196  0020                     	ds	2
   197  0022                     main@tmp:	
   198                           
   199                           ; 1 bytes @ 0x2
   200  0022                     	ds	1
   201  0023                     main@i:	
   202                           
   203                           ; 1 bytes @ 0x3
   204  0023                     	ds	1
   205                           
   206                           	psect	maintext
   207  0016                     __pmaintext:	
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 41 in file "teste_b1.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;  i               1    3[BANK0 ] unsigned char 
   218 ;;  tmp             1    2[BANK0 ] unsigned char 
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   223 ;; Tracked objects:
   224 ;;		On entry : B00/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   228 ;;      Params:         0       0       0       0
   229 ;;      Locals:         0       2       0       0
   230 ;;      Temps:          0       2       0       0
   231 ;;      Totals:         0       4       0       0
   232 ;;Total ram usage:        4 bytes
   233 ;; Hardware stack levels required when called:    2
   234 ;; This function calls:
   235 ;;		_atraso_ms
   236 ;;		_display7s
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           
   243                           ;psect for function _main
   244  0016                     _main:	
   245                           
   246                           ;teste_b1.c: 43: unsigned char tmp;
   247                           ;teste_b1.c: 44: unsigned char i;
   248                           ;teste_b1.c: 46: CMCON=0x07;
   249                           
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   252  0016  3007               	movlw	7
   253  0017  1283               	bcf	3,5	;RP0=0, select bank0
   254  0018  1303               	bcf	3,6	;RP1=0, select bank0
   255  0019  009F               	movwf	31	;volatile
   256                           
   257                           ;teste_b1.c: 47: TRISA=0xFE;
   258  001A  30FE               	movlw	254
   259  001B  1683               	bsf	3,5	;RP0=1, select bank1
   260  001C  1303               	bcf	3,6	;RP1=0, select bank1
   261  001D  0085               	movwf	5	;volatile
   262                           
   263                           ;teste_b1.c: 48: TRISB=0X00;
   264  001E  0186               	clrf	6	;volatile
   265                           
   266                           ;teste_b1.c: 55: {
   267                           ;teste_b1.c: 57: for(tmp=0;tmp<16;tmp++)
   268                           
   269                           ;teste_b1.c: 54: while(1)
   270  001F  1283               	bcf	3,5	;RP0=0, select bank0
   271  0020  1303               	bcf	3,6	;RP1=0, select bank0
   272  0021  01A2               	clrf	main@tmp
   273  0022  3010               	movlw	16
   274  0023  0222               	subwf	main@tmp,w
   275  0024  1803               	btfsc	3,0
   276  0025  283F               	goto	l970
   277  0026                     l962:	
   278                           
   279                           ;teste_b1.c: 58: {
   280                           ;teste_b1.c: 59: PORTB=display7s(tmp)|0x10;
   281  0026  0822               	movf	main@tmp,w
   282  0027  118A  214F  118A   	fcall	_display7s
   283  002A  3810               	iorlw	16
   284  002B  1283               	bcf	3,5	;RP0=0, select bank0
   285  002C  1303               	bcf	3,6	;RP1=0, select bank0
   286  002D  0086               	movwf	6	;volatile
   287                           
   288                           ;teste_b1.c: 60: atraso_ms(200);
   289  002E  30C8               	movlw	200
   290  002F  00F4               	movwf	atraso_ms@valor
   291  0030  3000               	movlw	0
   292  0031  00F5               	movwf	atraso_ms@valor+1
   293  0032  118A  2180  118A   	fcall	_atraso_ms
   294  0035  3001               	movlw	1
   295  0036  1283               	bcf	3,5	;RP0=0, select bank0
   296  0037  1303               	bcf	3,6	;RP1=0, select bank0
   297  0038  00A0               	movwf	??_main
   298  0039  0820               	movf	??_main,w
   299  003A  07A2               	addwf	main@tmp,f
   300  003B  3010               	movlw	16
   301  003C  0222               	subwf	main@tmp,w
   302  003D  1C03               	skipc
   303  003E  2826               	goto	l962
   304  003F                     l970:	
   305                           
   306                           ;teste_b1.c: 61: }
   307                           ;teste_b1.c: 62: for(tmp=0;tmp<16;tmp++)
   308  003F  01A2               	clrf	main@tmp
   309  0040  3010               	movlw	16
   310  0041  0222               	subwf	main@tmp,w
   311  0042  1803               	btfsc	3,0
   312  0043  285C               	goto	l984
   313  0044                     l976:	
   314                           
   315                           ;teste_b1.c: 63: {
   316                           ;teste_b1.c: 64: PORTB=display7s(tmp);
   317  0044  0822               	movf	main@tmp,w
   318  0045  118A  214F  118A   	fcall	_display7s
   319  0048  1283               	bcf	3,5	;RP0=0, select bank0
   320  0049  1303               	bcf	3,6	;RP1=0, select bank0
   321  004A  0086               	movwf	6	;volatile
   322                           
   323                           ;teste_b1.c: 65: atraso_ms(200);
   324  004B  30C8               	movlw	200
   325  004C  00F4               	movwf	atraso_ms@valor
   326  004D  3000               	movlw	0
   327  004E  00F5               	movwf	atraso_ms@valor+1
   328  004F  118A  2180  118A   	fcall	_atraso_ms
   329  0052  3001               	movlw	1
   330  0053  1283               	bcf	3,5	;RP0=0, select bank0
   331  0054  1303               	bcf	3,6	;RP1=0, select bank0
   332  0055  00A0               	movwf	??_main
   333  0056  0820               	movf	??_main,w
   334  0057  07A2               	addwf	main@tmp,f
   335  0058  3010               	movlw	16
   336  0059  0222               	subwf	main@tmp,w
   337  005A  1C03               	skipc
   338  005B  2844               	goto	l976
   339  005C                     l984:	
   340                           
   341                           ;teste_b1.c: 66: }
   342                           ;teste_b1.c: 67: for(tmp=0;tmp<16;tmp++)
   343  005C  01A2               	clrf	main@tmp
   344  005D  3010               	movlw	16
   345  005E  0222               	subwf	main@tmp,w
   346  005F  1803               	btfsc	3,0
   347  0060  2897               	goto	l1010
   348  0061                     l990:	
   349                           
   350                           ;teste_b1.c: 68: {
   351                           ;teste_b1.c: 69: for(i=0;i<10;i++)
   352  0061  01A3               	clrf	main@i
   353  0062  300A               	movlw	10
   354  0063  0223               	subwf	main@i,w
   355  0064  1803               	btfsc	3,0
   356  0065  288F               	goto	l1006
   357  0066                     l996:	
   358                           
   359                           ;teste_b1.c: 70: {
   360                           ;teste_b1.c: 71: PORTB=display7s(tmp);
   361  0066  0822               	movf	main@tmp,w
   362  0067  118A  214F  118A   	fcall	_display7s
   363  006A  1283               	bcf	3,5	;RP0=0, select bank0
   364  006B  1303               	bcf	3,6	;RP1=0, select bank0
   365  006C  0086               	movwf	6	;volatile
   366                           
   367                           ;teste_b1.c: 72: atraso_ms(10);
   368  006D  300A               	movlw	10
   369  006E  00F4               	movwf	atraso_ms@valor
   370  006F  3000               	movlw	0
   371  0070  00F5               	movwf	atraso_ms@valor+1
   372  0071  118A  2180  118A   	fcall	_atraso_ms
   373                           
   374                           ;teste_b1.c: 73: PORTB=display7s(tmp)|0x10;
   375  0074  1283               	bcf	3,5	;RP0=0, select bank0
   376  0075  1303               	bcf	3,6	;RP1=0, select bank0
   377  0076  0822               	movf	main@tmp,w
   378  0077  118A  214F  118A   	fcall	_display7s
   379  007A  3810               	iorlw	16
   380  007B  1283               	bcf	3,5	;RP0=0, select bank0
   381  007C  1303               	bcf	3,6	;RP1=0, select bank0
   382  007D  0086               	movwf	6	;volatile
   383                           
   384                           ;teste_b1.c: 74: atraso_ms(10);
   385  007E  300A               	movlw	10
   386  007F  00F4               	movwf	atraso_ms@valor
   387  0080  3000               	movlw	0
   388  0081  00F5               	movwf	atraso_ms@valor+1
   389  0082  118A  2180  118A   	fcall	_atraso_ms
   390  0085  3001               	movlw	1
   391  0086  1283               	bcf	3,5	;RP0=0, select bank0
   392  0087  1303               	bcf	3,6	;RP1=0, select bank0
   393  0088  00A0               	movwf	??_main
   394  0089  0820               	movf	??_main,w
   395  008A  07A3               	addwf	main@i,f
   396  008B  300A               	movlw	10
   397  008C  0223               	subwf	main@i,w
   398  008D  1C03               	skipc
   399  008E  2866               	goto	l996
   400  008F                     l1006:	
   401  008F  3001               	movlw	1
   402  0090  00A0               	movwf	??_main
   403  0091  0820               	movf	??_main,w
   404  0092  07A2               	addwf	main@tmp,f
   405  0093  3010               	movlw	16
   406  0094  0222               	subwf	main@tmp,w
   407  0095  1C03               	skipc
   408  0096  2861               	goto	l990
   409  0097                     l1010:	
   410                           
   411                           ;teste_b1.c: 75: }
   412                           ;teste_b1.c: 76: }
   413                           ;teste_b1.c: 77: PORTB=0;
   414  0097  0186               	clrf	6	;volatile
   415                           
   416                           ;teste_b1.c: 79: for(i=0;i<4;i++)
   417  0098  01A3               	clrf	main@i
   418  0099  3004               	movlw	4
   419  009A  0223               	subwf	main@i,w
   420  009B  1803               	btfsc	3,0
   421  009C  28B0               	goto	l1024
   422  009D                     l1016:	
   423                           
   424                           ;teste_b1.c: 80: {
   425                           ;teste_b1.c: 81: RA0^=1;
   426  009D  3001               	movlw	1
   427  009E  0685               	xorwf	5,f
   428                           
   429                           ;teste_b1.c: 82: atraso_ms(500);
   430  009F  30F4               	movlw	244
   431  00A0  00F4               	movwf	atraso_ms@valor
   432  00A1  3001               	movlw	1
   433  00A2  00F5               	movwf	atraso_ms@valor+1
   434  00A3  118A  2180  118A   	fcall	_atraso_ms
   435  00A6  3001               	movlw	1
   436  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   437  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   438  00A9  00A0               	movwf	??_main
   439  00AA  0820               	movf	??_main,w
   440  00AB  07A3               	addwf	main@i,f
   441  00AC  3004               	movlw	4
   442  00AD  0223               	subwf	main@i,w
   443  00AE  1C03               	skipc
   444  00AF  289D               	goto	l1016
   445  00B0                     l1024:	
   446                           
   447                           ;teste_b1.c: 83: }
   448                           ;teste_b1.c: 86: for(tmp=0;tmp<3;tmp++)
   449  00B0  01A2               	clrf	main@tmp
   450  00B1  3003               	movlw	3
   451  00B2  0222               	subwf	main@tmp,w
   452  00B3  1803               	btfsc	3,0
   453  00B4  28D6               	goto	l1046
   454  00B5                     l92:	
   455                           
   456                           ;teste_b1.c: 87: {
   457                           ;teste_b1.c: 88: for(i=1;i>0;i=i*2)
   458  00B5  01A3               	clrf	main@i
   459  00B6  0AA3               	incf	main@i,f
   460  00B7  0823               	movf	main@i,w
   461  00B8  1903               	btfsc	3,2
   462  00B9  28CE               	goto	l1042
   463  00BA                     l1034:	
   464                           
   465                           ;teste_b1.c: 89: {
   466                           ;teste_b1.c: 90: PORTB=i;
   467  00BA  0823               	movf	main@i,w
   468  00BB  0086               	movwf	6	;volatile
   469                           
   470                           ;teste_b1.c: 91: atraso_ms(200);
   471  00BC  30C8               	movlw	200
   472  00BD  00F4               	movwf	atraso_ms@valor
   473  00BE  3000               	movlw	0
   474  00BF  00F5               	movwf	atraso_ms@valor+1
   475  00C0  118A  2180  118A   	fcall	_atraso_ms
   476  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   477  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   478  00C5  0823               	movf	main@i,w
   479  00C6  00A0               	movwf	??_main
   480  00C7  0720               	addwf	??_main,w
   481  00C8  00A1               	movwf	??_main+1
   482  00C9  0821               	movf	??_main+1,w
   483  00CA  00A3               	movwf	main@i
   484  00CB  0823               	movf	main@i,w
   485  00CC  1D03               	btfss	3,2
   486  00CD  28BA               	goto	l1034
   487  00CE                     l1042:	
   488  00CE  3001               	movlw	1
   489  00CF  00A0               	movwf	??_main
   490  00D0  0820               	movf	??_main,w
   491  00D1  07A2               	addwf	main@tmp,f
   492  00D2  3003               	movlw	3
   493  00D3  0222               	subwf	main@tmp,w
   494  00D4  1C03               	skipc
   495  00D5  28B5               	goto	l92
   496  00D6                     l1046:	
   497                           
   498                           ;teste_b1.c: 92: }
   499                           ;teste_b1.c: 93: }
   500                           ;teste_b1.c: 94: PORTB=0;
   501  00D6  0186               	clrf	6	;volatile
   502                           
   503                           ;teste_b1.c: 95: for(i=0;i<4;i++)
   504  00D7  01A3               	clrf	main@i
   505  00D8                     L1:	
   506  00D8  3004               	movlw	4
   507  00D9  0223               	subwf	main@i,w
   508  00DA  1803               	btfsc	3,0
   509  00DB  2902               	goto	l1068
   510                           
   511                           ;teste_b1.c: 96: {
   512                           ;teste_b1.c: 97: PORTB^=0xFF;
   513  00DC  30FF               	movlw	255
   514  00DD  00A0               	movwf	??_main
   515  00DE  0820               	movf	??_main,w
   516  00DF  0686               	xorwf	6,f	;volatile
   517                           
   518                           ;teste_b1.c: 98: atraso_ms(200);
   519  00E0  30C8               	movlw	200
   520  00E1  00F4               	movwf	atraso_ms@valor
   521  00E2  3000               	movlw	0
   522  00E3  00F5               	movwf	atraso_ms@valor+1
   523  00E4  118A  2180  118A   	fcall	_atraso_ms
   524  00E7  3001               	movlw	1
   525  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   526  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   527  00EA  00A0               	movwf	??_main
   528  00EB  0820               	movf	??_main,w
   529  00EC  07A3               	addwf	main@i,f
   530  00ED  28D8               	goto	L1
   531  00EE                     l99:	
   532                           ;teste_b1.c: 99: }
   533                           ;teste_b1.c: 102: while((PORTB & 0x0F) != 0x0F)
   534                           
   535                           
   536                           ;teste_b1.c: 103: {
   537                           ;teste_b1.c: 104: if(RA1 == 0)
   538  00EE  1885               	btfsc	5,1	;volatile
   539  00EF  28F3               	goto	l100
   540                           
   541                           ;teste_b1.c: 105: {
   542                           ;teste_b1.c: 106: PORTB|=0x01;
   543  00F0  1406               	bsf	6,0	;volatile
   544  00F1                     l101:	
   545                           ;teste_b1.c: 107: while(RA1==0);
   546                           
   547  00F1  1C85               	btfss	5,1	;volatile
   548  00F2  28F1               	goto	l101
   549  00F3                     l100:	
   550                           
   551                           ;teste_b1.c: 108: }
   552                           ;teste_b1.c: 109: if(RA2 == 0)
   553  00F3  1905               	btfsc	5,2	;volatile
   554  00F4  28F8               	goto	l104
   555                           
   556                           ;teste_b1.c: 110: {
   557                           ;teste_b1.c: 111: PORTB|=0x02;
   558  00F5  1486               	bsf	6,1	;volatile
   559  00F6                     l105:	
   560                           ;teste_b1.c: 112: while(RA2==0);
   561                           
   562  00F6  1D05               	btfss	5,2	;volatile
   563  00F7  28F6               	goto	l105
   564  00F8                     l104:	
   565                           
   566                           ;teste_b1.c: 113: }
   567                           ;teste_b1.c: 114: if(RA3 == 0)
   568  00F8  1985               	btfsc	5,3	;volatile
   569  00F9  28FD               	goto	l108
   570                           
   571                           ;teste_b1.c: 115: {
   572                           ;teste_b1.c: 116: PORTB|=0x04;
   573  00FA  1506               	bsf	6,2	;volatile
   574  00FB                     l109:	
   575                           ;teste_b1.c: 117: while(RA3==0);
   576                           
   577  00FB  1D85               	btfss	5,3	;volatile
   578  00FC  28FB               	goto	l109
   579  00FD                     l108:	
   580                           
   581                           ;teste_b1.c: 118: }
   582                           ;teste_b1.c: 119: if(RA4 == 0)
   583  00FD  1A05               	btfsc	5,4	;volatile
   584  00FE  2902               	goto	l1068
   585                           
   586                           ;teste_b1.c: 120: {
   587                           ;teste_b1.c: 121: PORTB|=0x08;
   588  00FF  1586               	bsf	6,3	;volatile
   589  0100                     l113:	
   590                           ;teste_b1.c: 122: while(RA4==0);
   591                           
   592  0100  1E05               	btfss	5,4	;volatile
   593  0101  2900               	goto	l113
   594  0102                     l1068:	
   595  0102  300F               	movlw	15
   596  0103  0506               	andwf	6,w	;volatile
   597  0104  00A0               	movwf	??_main
   598  0105  300F               	movlw	15
   599  0106  0620               	xorwf	??_main,w
   600  0107  1D03               	btfss	3,2
   601  0108  28EE               	goto	l99
   602                           
   603                           ;teste_b1.c: 123: }
   604                           ;teste_b1.c: 124: }
   605                           ;teste_b1.c: 125: PORTB=0;
   606  0109  0186               	clrf	6	;volatile
   607                           
   608                           ;teste_b1.c: 128: TRISA=0xE0;
   609  010A  30E0               	movlw	224
   610  010B  1683               	bsf	3,5	;RP0=1, select bank1
   611  010C  1303               	bcf	3,6	;RP1=0, select bank1
   612  010D  0085               	movwf	5	;volatile
   613                           
   614                           ;teste_b1.c: 129: PORTA=0;
   615  010E  1283               	bcf	3,5	;RP0=0, select bank0
   616  010F  1303               	bcf	3,6	;RP1=0, select bank0
   617  0110  0185               	clrf	5	;volatile
   618                           
   619                           ;teste_b1.c: 130: for(i=0;i<4;i++)
   620  0111  01A3               	clrf	main@i
   621  0112  3004               	movlw	4
   622  0113  0223               	subwf	main@i,w
   623  0114  1803               	btfsc	3,0
   624  0115  294A               	goto	l1098
   625  0116                     l1082:	
   626                           
   627                           ;teste_b1.c: 131: {
   628                           ;teste_b1.c: 132: RA1^=1;
   629  0116  3002               	movlw	2
   630  0117  0685               	xorwf	5,f
   631                           
   632                           ;teste_b1.c: 133: atraso_ms(200);
   633  0118  30C8               	movlw	200
   634  0119  00F4               	movwf	atraso_ms@valor
   635  011A  3000               	movlw	0
   636  011B  00F5               	movwf	atraso_ms@valor+1
   637  011C  118A  2180  118A   	fcall	_atraso_ms
   638                           
   639                           ;teste_b1.c: 134: RA2^=1;
   640  011F  1283               	bcf	3,5	;RP0=0, select bank0
   641  0120  1303               	bcf	3,6	;RP1=0, select bank0
   642  0121  3004               	movlw	4
   643  0122  0685               	xorwf	5,f
   644                           
   645                           ;teste_b1.c: 135: atraso_ms(200);
   646  0123  30C8               	movlw	200
   647  0124  00F4               	movwf	atraso_ms@valor
   648  0125  3000               	movlw	0
   649  0126  00F5               	movwf	atraso_ms@valor+1
   650  0127  118A  2180  118A   	fcall	_atraso_ms
   651                           
   652                           ;teste_b1.c: 136: RA3^=1;
   653  012A  1283               	bcf	3,5	;RP0=0, select bank0
   654  012B  1303               	bcf	3,6	;RP1=0, select bank0
   655  012C  3008               	movlw	8
   656  012D  0685               	xorwf	5,f
   657                           
   658                           ;teste_b1.c: 137: atraso_ms(200);
   659  012E  30C8               	movlw	200
   660  012F  00F4               	movwf	atraso_ms@valor
   661  0130  3000               	movlw	0
   662  0131  00F5               	movwf	atraso_ms@valor+1
   663  0132  118A  2180  118A   	fcall	_atraso_ms
   664                           
   665                           ;teste_b1.c: 138: RA4^=1;
   666  0135  1283               	bcf	3,5	;RP0=0, select bank0
   667  0136  1303               	bcf	3,6	;RP1=0, select bank0
   668  0137  3010               	movlw	16
   669  0138  0685               	xorwf	5,f
   670                           
   671                           ;teste_b1.c: 139: atraso_ms(200);
   672  0139  30C8               	movlw	200
   673  013A  00F4               	movwf	atraso_ms@valor
   674  013B  3000               	movlw	0
   675  013C  00F5               	movwf	atraso_ms@valor+1
   676  013D  118A  2180  118A   	fcall	_atraso_ms
   677  0140  3001               	movlw	1
   678  0141  1283               	bcf	3,5	;RP0=0, select bank0
   679  0142  1303               	bcf	3,6	;RP1=0, select bank0
   680  0143  00A0               	movwf	??_main
   681  0144  0820               	movf	??_main,w
   682  0145  07A3               	addwf	main@i,f
   683  0146  3004               	movlw	4
   684  0147  0223               	subwf	main@i,w
   685  0148  1C03               	skipc
   686  0149  2916               	goto	l1082
   687  014A                     l1098:	
   688                           
   689                           ;teste_b1.c: 140: }
   690                           ;teste_b1.c: 141: TRISA=0xFE;
   691  014A  30FE               	movlw	254
   692  014B  1683               	bsf	3,5	;RP0=1, select bank1
   693  014C  1303               	bcf	3,6	;RP1=0, select bank1
   694  014D  0085               	movwf	5	;volatile
   695  014E                     l119:	
   696                           ;teste_b1.c: 143: while(1);
   697                           
   698  014E  294E               	goto	l119
   699  014F                     __end_of_main:	
   700                           
   701                           	psect	text1
   702  014F                     __ptext1:	
   703 ;; *************** function _display7s *****************
   704 ;; Defined at:
   705 ;;		line 26 in file "display7s.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;  v               1    wreg     unsigned char 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  v               1    4[COMMON] unsigned char 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      unsigned char 
   712 ;; Registers used:
   713 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   719 ;;      Params:         0       0       0       0
   720 ;;      Locals:         1       0       0       0
   721 ;;      Temps:          0       0       0       0
   722 ;;      Totals:         1       0       0       0
   723 ;;Total ram usage:        1 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    1
   726 ;; This function calls:
   727 ;;		Nothing
   728 ;; This function is called by:
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _display7s
   735  014F                     _display7s:	
   736                           
   737                           ;incstack = 0
   738                           ; Regs used in _display7s: [wreg-fsr0h+status,2+status,0]
   739                           ;display7s@v stored from wreg
   740  014F  00F4               	movwf	display7s@v
   741                           
   742                           ;display7s.c: 28: switch(v)
   743  0150  2973               	goto	l948
   744  0151                     l878:	
   745                           ;display7s.c: 29: {
   746                           ;display7s.c: 30: case 0:
   747                           
   748                           
   749                           ;display7s.c: 31: return 0xEE;
   750  0151  30EE               	movlw	238
   751  0152  0008               	return
   752  0153                     l882:	
   753                           ;display7s.c: 32: case 1:
   754                           
   755                           
   756                           ;display7s.c: 33: return 0x28;
   757  0153  3028               	movlw	40
   758  0154  0008               	return
   759  0155                     l886:	
   760                           ;display7s.c: 34: case 2:
   761                           
   762                           
   763                           ;display7s.c: 35: return 0xCD;
   764  0155  30CD               	movlw	205
   765  0156  0008               	return
   766  0157                     l890:	
   767                           ;display7s.c: 36: case 3:
   768                           
   769                           
   770                           ;display7s.c: 37: return 0x6D;
   771  0157  306D               	movlw	109
   772  0158  0008               	return
   773  0159                     l894:	
   774                           ;display7s.c: 38: case 4:
   775                           
   776                           
   777                           ;display7s.c: 39: return 0x2B;
   778  0159  302B               	movlw	43
   779  015A  0008               	return
   780  015B                     l898:	
   781                           ;display7s.c: 40: case 5:
   782                           
   783                           
   784                           ;display7s.c: 41: return 0x67;
   785  015B  3067               	movlw	103
   786  015C  0008               	return
   787  015D                     l902:	
   788                           ;display7s.c: 42: case 6:
   789                           
   790                           
   791                           ;display7s.c: 43: return 0xE7;
   792  015D  30E7               	movlw	231
   793  015E  0008               	return
   794  015F                     l906:	
   795                           ;display7s.c: 44: case 7:
   796                           
   797                           
   798                           ;display7s.c: 45: return 0x2C;
   799  015F  302C               	movlw	44
   800  0160  0008               	return
   801  0161                     l910:	
   802                           ;display7s.c: 46: case 8:
   803                           
   804                           
   805                           ;display7s.c: 47: return 0xEF;
   806  0161  30EF               	movlw	239
   807  0162  0008               	return
   808  0163                     l914:	
   809                           ;display7s.c: 48: case 9:
   810                           
   811                           
   812                           ;display7s.c: 49: return 0x6F;
   813  0163  306F               	movlw	111
   814  0164  0008               	return
   815  0165                     l918:	
   816                           ;display7s.c: 50: case 10:
   817                           
   818                           
   819                           ;display7s.c: 51: return 0xAF;
   820  0165  30AF               	movlw	175
   821  0166  0008               	return
   822  0167                     l922:	
   823                           ;display7s.c: 52: case 11:
   824                           
   825                           
   826                           ;display7s.c: 53: return 0xE3;
   827  0167  30E3               	movlw	227
   828  0168  0008               	return
   829  0169                     l926:	
   830                           ;display7s.c: 54: case 12:
   831                           
   832                           
   833                           ;display7s.c: 55: return 0xC6;
   834  0169  30C6               	movlw	198
   835  016A  0008               	return
   836  016B                     l930:	
   837                           ;display7s.c: 56: case 13:
   838                           
   839                           
   840                           ;display7s.c: 57: return 0xE9;
   841  016B  30E9               	movlw	233
   842  016C  0008               	return
   843  016D                     l934:	
   844                           ;display7s.c: 58: case 14:
   845                           
   846                           
   847                           ;display7s.c: 59: return 0xC7;
   848  016D  30C7               	movlw	199
   849  016E  0008               	return
   850  016F                     l938:	
   851                           ;display7s.c: 60: case 15:
   852                           
   853                           
   854                           ;display7s.c: 61: return 0x87;
   855  016F  3087               	movlw	135
   856  0170  0008               	return
   857  0171                     l942:	
   858                           ;display7s.c: 62: default:
   859                           
   860                           
   861                           ;display7s.c: 63: return 0;
   862  0171  3000               	movlw	0
   863                           
   864                           ;display7s.c: 64: }
   865  0172  0008               	return
   866  0173                     l948:	
   867  0173  0874               	movf	display7s@v,w
   868                           
   869                           ; Switch size 1, requested type "space"
   870                           ; Number of cases is 16, Range of values is 0 to 15
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; direct_byte           39     7 (fixed)
   874                           ; simple_byte           49    25 (average)
   875                           ; jumptable            260     6 (fixed)
   876                           ;	Chosen strategy is direct_byte
   877  0174  0084               	movwf	4
   878  0175  3010               	movlw	16
   879  0176  0204               	subwf	4,w
   880  0177  1803               	skipnc
   881  0178  2971               	goto	l942
   882  0179  3001               	movlw	high S1120
   883  017A  008A               	movwf	10
   884  017B  1003               	clrc
   885  017C  0D04               	rlf	4,w
   886  017D  3EA3               	addlw	low S1120
   887  017E  0082               	movwf	2
   888  017F  0008               	return
   889  0180                     __end_of_display7s:	
   890                           
   891                           	psect	swtext1
   892  01A3                     __pswtext1:	
   893  01A3                     S1120:	
   894  01A3  118A  2951         	ljmp	l878
   895  01A5  118A  2953         	ljmp	l882
   896  01A7  118A  2955         	ljmp	l886
   897  01A9  118A  2957         	ljmp	l890
   898  01AB  118A  2959         	ljmp	l894
   899  01AD  118A  295B         	ljmp	l898
   900  01AF  118A  295D         	ljmp	l902
   901  01B1  118A  295F         	ljmp	l906
   902  01B3  118A  2961         	ljmp	l910
   903  01B5  118A  2963         	ljmp	l914
   904  01B7  118A  2965         	ljmp	l918
   905  01B9  118A  2967         	ljmp	l922
   906  01BB  118A  2969         	ljmp	l926
   907  01BD  118A  296B         	ljmp	l930
   908  01BF  118A  296D         	ljmp	l934
   909  01C1  118A  296F         	ljmp	l938
   910                           
   911                           	psect	text2
   912  0180                     __ptext2:	
   913 ;; *************** function _atraso_ms *****************
   914 ;; Defined at:
   915 ;;		line 26 in file "atraso.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  valor           2    4[COMMON] unsigned int 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  i               2    7[COMMON] unsigned int 
   920 ;;  j               1    9[COMMON] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   930 ;;      Params:         2       0       0       0
   931 ;;      Locals:         3       0       0       0
   932 ;;      Temps:          1       0       0       0
   933 ;;      Totals:         6       0       0       0
   934 ;;Total ram usage:        6 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _atraso_ms
   946  0180                     _atraso_ms:	
   947                           
   948                           ;atraso.c: 28: unsigned int i;
   949                           ;atraso.c: 29: unsigned char j;
   950                           ;atraso.c: 31: for (i =0; i< valor; i++)
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _atraso_ms: [wreg+status,2+status,0]
   954  0180  01F7               	clrf	atraso_ms@i
   955  0181  01F8               	clrf	atraso_ms@i+1
   956  0182                     l3:	
   957  0182  0875               	movf	atraso_ms@valor+1,w
   958  0183  0278               	subwf	atraso_ms@i+1,w
   959  0184  1D03               	skipz
   960  0185  2988               	goto	u345
   961  0186  0874               	movf	atraso_ms@valor,w
   962  0187  0277               	subwf	atraso_ms@i,w
   963  0188                     u345:	
   964  0188  1803               	btfsc	3,0
   965  0189  0008               	return
   966                           
   967                           ;atraso.c: 32: {
   968                           ;atraso.c: 34: for (j =0 ; j < 200; j++)
   969  018A  01F9               	clrf	atraso_ms@j
   970  018B  30C8               	movlw	200
   971  018C  0279               	subwf	atraso_ms@j,w
   972  018D  1803               	btfsc	3,0
   973  018E  299C               	goto	l874
   974  018F                     l5:	
   975  018F  0000               	nop	;# 
   976  0190  0000               	nop	;# 
   977  0191  0000               	nop	;# 
   978  0192  0000               	nop	;# 
   979  0193  0000               	nop	;# 
   980  0194  3001               	movlw	1
   981  0195  00F6               	movwf	??_atraso_ms
   982  0196  0876               	movf	??_atraso_ms,w
   983  0197  07F9               	addwf	atraso_ms@j,f
   984  0198  30C8               	movlw	200
   985  0199  0279               	subwf	atraso_ms@j,w
   986  019A  1C03               	skipc
   987  019B  298F               	goto	l5
   988  019C                     l874:	
   989  019C  3001               	movlw	1
   990  019D  07F7               	addwf	atraso_ms@i,f
   991  019E  1803               	skipnc
   992  019F  0AF8               	incf	atraso_ms@i+1,f
   993  01A0  3000               	movlw	0
   994  01A1  07F8               	addwf	atraso_ms@i+1,f
   995  01A2  2982               	goto	l3
   996  01A3                     __end_of_atraso_ms:	
   997                           
   998                           	psect	text3
   999  01C3                     __ptext3:	
  1000 ;; *************** function _isr *****************
  1001 ;; Defined at:
  1002 ;;		line 37 in file "teste_b1.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		None
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1016 ;;      Params:         0       0       0       0
  1017 ;;      Locals:         0       0       0       0
  1018 ;;      Temps:          4       0       0       0
  1019 ;;      Totals:         4       0       0       0
  1020 ;;Total ram usage:        4 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		Interrupt level 1
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _isr
  1031  01C3                     _isr:	
  1032  01C3  0873               	movf	??_isr+3,w
  1033  01C4  00FF               	movwf	127
  1034  01C5  0872               	movf	??_isr+2,w
  1035  01C6  008A               	movwf	10
  1036  01C7  0871               	movf	??_isr+1,w
  1037  01C8  0084               	movwf	4
  1038  01C9  0E70               	swapf	??_isr^(0+-128),w
  1039  01CA  0083               	movwf	3
  1040  01CB  0EFE               	swapf	126,f
  1041  01CC  0E7E               	swapf	126,w
  1042  01CD  0009               	retfie
  1043  01CE                     __end_of_isr:	
  1044  007E                     btemp	set	126	;btemp
  1045  007E                     wtemp0	set	126
  1046                           
  1047                           	psect	intentry
  1048  0004                     __pintentry:	
  1049                           ;incstack = 0
  1050                           ; Regs used in _isr: []
  1051                           
  1052  0004                     interrupt_function:	
  1053  007E                     saved_w	set	btemp
  1054  0004  00FE               	movwf	btemp
  1055  0005  0E03               	swapf	3,w
  1056  0006  00F0               	movwf	??_isr
  1057  0007  0804               	movf	4,w
  1058  0008  00F1               	movwf	??_isr+1
  1059  0009  080A               	movf	10,w
  1060  000A  00F2               	movwf	??_isr+2
  1061  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1062  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1063  000D  087F               	movf	btemp+1,w
  1064  000E  00F3               	movwf	??_isr+3
  1065  000F  118A  29C3         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      4       4
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_atraso_ms

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1243
                                              0 BANK0      4     4      0
                          _atraso_ms
                          _display7s
 ---------------------------------------------------------------------------------
 (1) _display7s                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     675
                                              4 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _display7s

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      4       4       3        5.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Aug 13 21:56:24 2019

                      l3 0182                        l5 018F                        pc 0002  
            __CFG_CP$OFF 0000                       l92 00B5                       l99 00EE  
                     fsr 0004                      l100 00F3                      l101 00F1  
                    l104 00F8                      l113 0100                      l105 00F6  
                    l108 00FD                      l109 00FB                      l119 014E  
                    l910 0161                      l902 015D                      l930 016B  
                    l922 0167                      l914 0163                      l906 015F  
                    l942 0171                      l934 016D                      l926 0169  
                    l918 0165                      l874 019C                      l938 016F  
                    l890 0157                      l882 0153                      l970 003F  
                    l962 0026                      l948 0173                      l894 0159  
                    l886 0155                      l878 0151                      l990 0061  
                    l984 005C                      l976 0044                      l898 015B  
                    l996 0066                      _RA0 0028                      _RA1 0029  
                    _RA2 002A                      _RA3 002B                      _RA4 002C  
                    u345 0188             __CFG_CPD$OFF 0000                      _isr 01C3  
                    fsr0 0004             __CFG_FOSC$HS 0000                     S1120 01A3  
           __CFG_LVP$OFF 0000                     l1010 0097                     l1006 008F  
                   l1024 00B0                     l1016 009D                     l1042 00CE  
                   l1034 00BA                     l1046 00D6                     l1082 0116  
                   l1068 0102                     l1098 014A                     ?_isr 0070  
                   _main 0016                     btemp 007E                     start 0011  
          __CFG_MCLRE$ON 0000                    ??_isr 0070                    ?_main 0070  
                  _EEADR 009B            __CFG_WDTE$OFF 0000                    _CMCON 001F  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086            __CFG_PWRTE$ON 0000                    main@i 0023  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0013             __end_of_main 014F  
                 ??_main 0020                   _EEDATA 009A                   _EECON2 009D  
                 saved_w 007E  __end_of__initialization 0013           __pcstackCOMMON 0070  
     __size_of_display7s 0031       __size_of_atraso_ms 0023               __pmaintext 0016  
             __pintentry 0004        __end_of_display7s 0180        __end_of_atraso_ms 01A3  
                __ptext1 014F                  __ptext2 0180                  __ptext3 01C3  
           __size_of_isr 000B                  main@tmp 0022     end_of_initialization 0013  
             display7s@v 0074               atraso_ms@i 0077               atraso_ms@j 0079  
    start_initialization 0013              __end_of_isr 01CE                ___latbits 0001  
          __pcstackBANK0 0020                _display7s 014F                __pswtext1 01A3  
              _atraso_ms 0180           atraso_ms@valor 0074        interrupt_function 0004  
             ?_display7s 0070               ?_atraso_ms 0074               _EECON1bits 009C  
          __size_of_main 0139              ??_display7s 0074              ??_atraso_ms 0076  
               intlevel1 0000  
