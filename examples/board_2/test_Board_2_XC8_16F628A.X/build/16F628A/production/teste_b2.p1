Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"765 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f628a.h
[v _CMCON `Vuc ~T0 @X0 0 e@31 ]
"905
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"967
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"164
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"226
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"42 lcd.h
[v _lcd_init `(v ~T0 @X0 0 ef ]
"31 i2c.h
[v _i2c_init `(v ~T0 @X0 0 ef ]
"27 serial.h
[v _serial_init `(v ~T0 @X0 0 ef ]
"43 lcd.h
[v _lcd_cmd `(v ~T0 @X0 0 ef1`uc ]
"44
[v _lcd_dat `(v ~T0 @X0 0 ef1`uc ]
"26 atraso.h
[v _atraso_ms `(v ~T0 @X0 0 ef1`ui ]
"45 lcd.h
[v _lcd_str `(v ~T0 @X0 0 ef1`*Cuc ]
"1417 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f628a.h
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
"1419
[v _RA2 `Vb ~T0 @X0 0 e@42 ]
"36 teclado.h
[v _tc_tecla `(uc ~T0 @X0 0 ef1`ui ]
"27 eeprom_ext.h
[v _e2pext_r `(uc ~T0 @X0 0 ef1`ui ]
"28
[v _e2pext_w `(v ~T0 @X0 0 ef2`ui`uc ]
"31 rtc.h
[v _rtc_r `(v ~T0 @X0 0 ef ]
"26
[v _date `Vuc ~T0 @X0 -> 0 `x e ]
"27
[v _time `Vuc ~T0 @X0 -> 0 `x e ]
"29 serial.h
[v _serial_tx_str `(v ~T0 @X0 0 ef1`*Cuc ]
"28
[v _serial_tx `(v ~T0 @X0 0 ef1`uc ]
"30
[v _serial_rx `(uc ~T0 @X0 0 ef1`ui ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f628a.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f628a.h
[; ;pic16f628a.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f628a.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f628a.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f628a.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f628a.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f628a.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f628a.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f628a.h: 76: typedef union {
[; ;pic16f628a.h: 77: struct {
[; ;pic16f628a.h: 78: unsigned C :1;
[; ;pic16f628a.h: 79: unsigned DC :1;
[; ;pic16f628a.h: 80: unsigned Z :1;
[; ;pic16f628a.h: 81: unsigned nPD :1;
[; ;pic16f628a.h: 82: unsigned nTO :1;
[; ;pic16f628a.h: 83: unsigned RP :2;
[; ;pic16f628a.h: 84: unsigned IRP :1;
[; ;pic16f628a.h: 85: };
[; ;pic16f628a.h: 86: struct {
[; ;pic16f628a.h: 87: unsigned :5;
[; ;pic16f628a.h: 88: unsigned RP0 :1;
[; ;pic16f628a.h: 89: unsigned RP1 :1;
[; ;pic16f628a.h: 90: };
[; ;pic16f628a.h: 91: struct {
[; ;pic16f628a.h: 92: unsigned CARRY :1;
[; ;pic16f628a.h: 93: unsigned :1;
[; ;pic16f628a.h: 94: unsigned ZERO :1;
[; ;pic16f628a.h: 95: };
[; ;pic16f628a.h: 96: } STATUSbits_t;
[; ;pic16f628a.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f628a.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f628a.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f628a.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f628a.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f628a.h: 169: typedef union {
[; ;pic16f628a.h: 170: struct {
[; ;pic16f628a.h: 171: unsigned RA0 :1;
[; ;pic16f628a.h: 172: unsigned RA1 :1;
[; ;pic16f628a.h: 173: unsigned RA2 :1;
[; ;pic16f628a.h: 174: unsigned RA3 :1;
[; ;pic16f628a.h: 175: unsigned RA4 :1;
[; ;pic16f628a.h: 176: unsigned RA5 :1;
[; ;pic16f628a.h: 177: unsigned RA6 :1;
[; ;pic16f628a.h: 178: unsigned RA7 :1;
[; ;pic16f628a.h: 179: };
[; ;pic16f628a.h: 180: } PORTAbits_t;
[; ;pic16f628a.h: 181: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f628a.h: 226: extern volatile unsigned char PORTB @ 0x006;
"228
[; ;pic16f628a.h: 228: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f628a.h: 231: typedef union {
[; ;pic16f628a.h: 232: struct {
[; ;pic16f628a.h: 233: unsigned RB0 :1;
[; ;pic16f628a.h: 234: unsigned RB1 :1;
[; ;pic16f628a.h: 235: unsigned RB2 :1;
[; ;pic16f628a.h: 236: unsigned RB3 :1;
[; ;pic16f628a.h: 237: unsigned RB4 :1;
[; ;pic16f628a.h: 238: unsigned RB5 :1;
[; ;pic16f628a.h: 239: unsigned RB6 :1;
[; ;pic16f628a.h: 240: unsigned RB7 :1;
[; ;pic16f628a.h: 241: };
[; ;pic16f628a.h: 242: } PORTBbits_t;
[; ;pic16f628a.h: 243: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f628a.h: 288: extern volatile unsigned char PCLATH @ 0x00A;
"290
[; ;pic16f628a.h: 290: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f628a.h: 293: typedef union {
[; ;pic16f628a.h: 294: struct {
[; ;pic16f628a.h: 295: unsigned PCLATH :5;
[; ;pic16f628a.h: 296: };
[; ;pic16f628a.h: 297: } PCLATHbits_t;
[; ;pic16f628a.h: 298: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f628a.h: 308: extern volatile unsigned char INTCON @ 0x00B;
"310
[; ;pic16f628a.h: 310: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f628a.h: 313: typedef union {
[; ;pic16f628a.h: 314: struct {
[; ;pic16f628a.h: 315: unsigned RBIF :1;
[; ;pic16f628a.h: 316: unsigned INTF :1;
[; ;pic16f628a.h: 317: unsigned T0IF :1;
[; ;pic16f628a.h: 318: unsigned RBIE :1;
[; ;pic16f628a.h: 319: unsigned INTE :1;
[; ;pic16f628a.h: 320: unsigned T0IE :1;
[; ;pic16f628a.h: 321: unsigned PEIE :1;
[; ;pic16f628a.h: 322: unsigned GIE :1;
[; ;pic16f628a.h: 323: };
[; ;pic16f628a.h: 324: struct {
[; ;pic16f628a.h: 325: unsigned :2;
[; ;pic16f628a.h: 326: unsigned TMR0IF :1;
[; ;pic16f628a.h: 327: unsigned :2;
[; ;pic16f628a.h: 328: unsigned TMR0IE :1;
[; ;pic16f628a.h: 329: };
[; ;pic16f628a.h: 330: } INTCONbits_t;
[; ;pic16f628a.h: 331: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f628a.h: 386: extern volatile unsigned char PIR1 @ 0x00C;
"388
[; ;pic16f628a.h: 388: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f628a.h: 391: typedef union {
[; ;pic16f628a.h: 392: struct {
[; ;pic16f628a.h: 393: unsigned TMR1IF :1;
[; ;pic16f628a.h: 394: unsigned TMR2IF :1;
[; ;pic16f628a.h: 395: unsigned CCP1IF :1;
[; ;pic16f628a.h: 396: unsigned :1;
[; ;pic16f628a.h: 397: unsigned TXIF :1;
[; ;pic16f628a.h: 398: unsigned RCIF :1;
[; ;pic16f628a.h: 399: unsigned CMIF :1;
[; ;pic16f628a.h: 400: unsigned EEIF :1;
[; ;pic16f628a.h: 401: };
[; ;pic16f628a.h: 402: } PIR1bits_t;
[; ;pic16f628a.h: 403: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f628a.h: 443: extern volatile unsigned short TMR1 @ 0x00E;
"445
[; ;pic16f628a.h: 445: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f628a.h: 450: extern volatile unsigned char TMR1L @ 0x00E;
"452
[; ;pic16f628a.h: 452: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f628a.h: 457: extern volatile unsigned char TMR1H @ 0x00F;
"459
[; ;pic16f628a.h: 459: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f628a.h: 464: extern volatile unsigned char T1CON @ 0x010;
"466
[; ;pic16f628a.h: 466: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f628a.h: 469: typedef union {
[; ;pic16f628a.h: 470: struct {
[; ;pic16f628a.h: 471: unsigned TMR1ON :1;
[; ;pic16f628a.h: 472: unsigned TMR1CS :1;
[; ;pic16f628a.h: 473: unsigned nT1SYNC :1;
[; ;pic16f628a.h: 474: unsigned T1OSCEN :1;
[; ;pic16f628a.h: 475: unsigned T1CKPS :2;
[; ;pic16f628a.h: 476: };
[; ;pic16f628a.h: 477: struct {
[; ;pic16f628a.h: 478: unsigned :4;
[; ;pic16f628a.h: 479: unsigned T1CKPS0 :1;
[; ;pic16f628a.h: 480: unsigned T1CKPS1 :1;
[; ;pic16f628a.h: 481: };
[; ;pic16f628a.h: 482: } T1CONbits_t;
[; ;pic16f628a.h: 483: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f628a.h: 523: extern volatile unsigned char TMR2 @ 0x011;
"525
[; ;pic16f628a.h: 525: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f628a.h: 530: extern volatile unsigned char T2CON @ 0x012;
"532
[; ;pic16f628a.h: 532: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f628a.h: 535: typedef union {
[; ;pic16f628a.h: 536: struct {
[; ;pic16f628a.h: 537: unsigned T2CKPS :2;
[; ;pic16f628a.h: 538: unsigned TMR2ON :1;
[; ;pic16f628a.h: 539: unsigned TOUTPS :4;
[; ;pic16f628a.h: 540: };
[; ;pic16f628a.h: 541: struct {
[; ;pic16f628a.h: 542: unsigned T2CKPS0 :1;
[; ;pic16f628a.h: 543: unsigned T2CKPS1 :1;
[; ;pic16f628a.h: 544: unsigned :1;
[; ;pic16f628a.h: 545: unsigned TOUTPS0 :1;
[; ;pic16f628a.h: 546: unsigned TOUTPS1 :1;
[; ;pic16f628a.h: 547: unsigned TOUTPS2 :1;
[; ;pic16f628a.h: 548: unsigned TOUTPS3 :1;
[; ;pic16f628a.h: 549: };
[; ;pic16f628a.h: 550: } T2CONbits_t;
[; ;pic16f628a.h: 551: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f628a.h: 601: extern volatile unsigned short CCPR1 @ 0x015;
"603
[; ;pic16f628a.h: 603: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f628a.h: 608: extern volatile unsigned char CCPR1L @ 0x015;
"610
[; ;pic16f628a.h: 610: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f628a.h: 615: extern volatile unsigned char CCPR1H @ 0x016;
"617
[; ;pic16f628a.h: 617: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f628a.h: 622: extern volatile unsigned char CCP1CON @ 0x017;
"624
[; ;pic16f628a.h: 624: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f628a.h: 627: typedef union {
[; ;pic16f628a.h: 628: struct {
[; ;pic16f628a.h: 629: unsigned CCP1M :4;
[; ;pic16f628a.h: 630: unsigned CCP1Y :1;
[; ;pic16f628a.h: 631: unsigned CCP1X :1;
[; ;pic16f628a.h: 632: };
[; ;pic16f628a.h: 633: struct {
[; ;pic16f628a.h: 634: unsigned CCP1M0 :1;
[; ;pic16f628a.h: 635: unsigned CCP1M1 :1;
[; ;pic16f628a.h: 636: unsigned CCP1M2 :1;
[; ;pic16f628a.h: 637: unsigned CCP1M3 :1;
[; ;pic16f628a.h: 638: };
[; ;pic16f628a.h: 639: } CCP1CONbits_t;
[; ;pic16f628a.h: 640: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f628a.h: 680: extern volatile unsigned char RCSTA @ 0x018;
"682
[; ;pic16f628a.h: 682: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f628a.h: 685: typedef union {
[; ;pic16f628a.h: 686: struct {
[; ;pic16f628a.h: 687: unsigned RX9D :1;
[; ;pic16f628a.h: 688: unsigned OERR :1;
[; ;pic16f628a.h: 689: unsigned FERR :1;
[; ;pic16f628a.h: 690: unsigned ADEN :1;
[; ;pic16f628a.h: 691: unsigned CREN :1;
[; ;pic16f628a.h: 692: unsigned SREN :1;
[; ;pic16f628a.h: 693: unsigned RX9 :1;
[; ;pic16f628a.h: 694: unsigned SPEN :1;
[; ;pic16f628a.h: 695: };
[; ;pic16f628a.h: 696: struct {
[; ;pic16f628a.h: 697: unsigned :3;
[; ;pic16f628a.h: 698: unsigned ADDEN :1;
[; ;pic16f628a.h: 699: };
[; ;pic16f628a.h: 700: } RCSTAbits_t;
[; ;pic16f628a.h: 701: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f628a.h: 751: extern volatile unsigned char TXREG @ 0x019;
"753
[; ;pic16f628a.h: 753: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f628a.h: 758: extern volatile unsigned char RCREG @ 0x01A;
"760
[; ;pic16f628a.h: 760: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f628a.h: 765: extern volatile unsigned char CMCON @ 0x01F;
"767
[; ;pic16f628a.h: 767: asm("CMCON equ 01Fh");
[; <" CMCON equ 01Fh ;# ">
[; ;pic16f628a.h: 770: typedef union {
[; ;pic16f628a.h: 771: struct {
[; ;pic16f628a.h: 772: unsigned CM :3;
[; ;pic16f628a.h: 773: unsigned CIS :1;
[; ;pic16f628a.h: 774: unsigned C1INV :1;
[; ;pic16f628a.h: 775: unsigned C2INV :1;
[; ;pic16f628a.h: 776: unsigned C1OUT :1;
[; ;pic16f628a.h: 777: unsigned C2OUT :1;
[; ;pic16f628a.h: 778: };
[; ;pic16f628a.h: 779: struct {
[; ;pic16f628a.h: 780: unsigned CM0 :1;
[; ;pic16f628a.h: 781: unsigned CM1 :1;
[; ;pic16f628a.h: 782: unsigned CM2 :1;
[; ;pic16f628a.h: 783: };
[; ;pic16f628a.h: 784: } CMCONbits_t;
[; ;pic16f628a.h: 785: extern volatile CMCONbits_t CMCONbits @ 0x01F;
[; ;pic16f628a.h: 835: extern volatile unsigned char OPTION_REG @ 0x081;
"837
[; ;pic16f628a.h: 837: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f628a.h: 840: typedef union {
[; ;pic16f628a.h: 841: struct {
[; ;pic16f628a.h: 842: unsigned PS :3;
[; ;pic16f628a.h: 843: unsigned PSA :1;
[; ;pic16f628a.h: 844: unsigned T0SE :1;
[; ;pic16f628a.h: 845: unsigned T0CS :1;
[; ;pic16f628a.h: 846: unsigned INTEDG :1;
[; ;pic16f628a.h: 847: unsigned nRBPU :1;
[; ;pic16f628a.h: 848: };
[; ;pic16f628a.h: 849: struct {
[; ;pic16f628a.h: 850: unsigned PS0 :1;
[; ;pic16f628a.h: 851: unsigned PS1 :1;
[; ;pic16f628a.h: 852: unsigned PS2 :1;
[; ;pic16f628a.h: 853: };
[; ;pic16f628a.h: 854: } OPTION_REGbits_t;
[; ;pic16f628a.h: 855: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f628a.h: 905: extern volatile unsigned char TRISA @ 0x085;
"907
[; ;pic16f628a.h: 907: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f628a.h: 910: typedef union {
[; ;pic16f628a.h: 911: struct {
[; ;pic16f628a.h: 912: unsigned TRISA0 :1;
[; ;pic16f628a.h: 913: unsigned TRISA1 :1;
[; ;pic16f628a.h: 914: unsigned TRISA2 :1;
[; ;pic16f628a.h: 915: unsigned TRISA3 :1;
[; ;pic16f628a.h: 916: unsigned TRISA4 :1;
[; ;pic16f628a.h: 917: unsigned TRISA5 :1;
[; ;pic16f628a.h: 918: unsigned TRISA6 :1;
[; ;pic16f628a.h: 919: unsigned TRISA7 :1;
[; ;pic16f628a.h: 920: };
[; ;pic16f628a.h: 921: } TRISAbits_t;
[; ;pic16f628a.h: 922: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f628a.h: 967: extern volatile unsigned char TRISB @ 0x086;
"969
[; ;pic16f628a.h: 969: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f628a.h: 972: typedef union {
[; ;pic16f628a.h: 973: struct {
[; ;pic16f628a.h: 974: unsigned TRISB0 :1;
[; ;pic16f628a.h: 975: unsigned TRISB1 :1;
[; ;pic16f628a.h: 976: unsigned TRISB2 :1;
[; ;pic16f628a.h: 977: unsigned TRISB3 :1;
[; ;pic16f628a.h: 978: unsigned TRISB4 :1;
[; ;pic16f628a.h: 979: unsigned TRISB5 :1;
[; ;pic16f628a.h: 980: unsigned TRISB6 :1;
[; ;pic16f628a.h: 981: unsigned TRISB7 :1;
[; ;pic16f628a.h: 982: };
[; ;pic16f628a.h: 983: } TRISBbits_t;
[; ;pic16f628a.h: 984: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f628a.h: 1029: extern volatile unsigned char PIE1 @ 0x08C;
"1031
[; ;pic16f628a.h: 1031: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f628a.h: 1034: typedef union {
[; ;pic16f628a.h: 1035: struct {
[; ;pic16f628a.h: 1036: unsigned TMR1IE :1;
[; ;pic16f628a.h: 1037: unsigned TMR2IE :1;
[; ;pic16f628a.h: 1038: unsigned CCP1IE :1;
[; ;pic16f628a.h: 1039: unsigned :1;
[; ;pic16f628a.h: 1040: unsigned TXIE :1;
[; ;pic16f628a.h: 1041: unsigned RCIE :1;
[; ;pic16f628a.h: 1042: unsigned CMIE :1;
[; ;pic16f628a.h: 1043: unsigned EEIE :1;
[; ;pic16f628a.h: 1044: };
[; ;pic16f628a.h: 1045: } PIE1bits_t;
[; ;pic16f628a.h: 1046: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f628a.h: 1086: extern volatile unsigned char PCON @ 0x08E;
"1088
[; ;pic16f628a.h: 1088: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f628a.h: 1091: typedef union {
[; ;pic16f628a.h: 1092: struct {
[; ;pic16f628a.h: 1093: unsigned nBOR :1;
[; ;pic16f628a.h: 1094: unsigned nPOR :1;
[; ;pic16f628a.h: 1095: unsigned :1;
[; ;pic16f628a.h: 1096: unsigned OSCF :1;
[; ;pic16f628a.h: 1097: };
[; ;pic16f628a.h: 1098: struct {
[; ;pic16f628a.h: 1099: unsigned nBO :1;
[; ;pic16f628a.h: 1100: };
[; ;pic16f628a.h: 1101: struct {
[; ;pic16f628a.h: 1102: unsigned nBOD :1;
[; ;pic16f628a.h: 1103: };
[; ;pic16f628a.h: 1104: } PCONbits_t;
[; ;pic16f628a.h: 1105: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f628a.h: 1135: extern volatile unsigned char PR2 @ 0x092;
"1137
[; ;pic16f628a.h: 1137: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f628a.h: 1142: extern volatile unsigned char TXSTA @ 0x098;
"1144
[; ;pic16f628a.h: 1144: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f628a.h: 1147: typedef union {
[; ;pic16f628a.h: 1148: struct {
[; ;pic16f628a.h: 1149: unsigned TX9D :1;
[; ;pic16f628a.h: 1150: unsigned TRMT :1;
[; ;pic16f628a.h: 1151: unsigned BRGH :1;
[; ;pic16f628a.h: 1152: unsigned :1;
[; ;pic16f628a.h: 1153: unsigned SYNC :1;
[; ;pic16f628a.h: 1154: unsigned TXEN :1;
[; ;pic16f628a.h: 1155: unsigned TX9 :1;
[; ;pic16f628a.h: 1156: unsigned CSRC :1;
[; ;pic16f628a.h: 1157: };
[; ;pic16f628a.h: 1158: } TXSTAbits_t;
[; ;pic16f628a.h: 1159: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f628a.h: 1199: extern volatile unsigned char SPBRG @ 0x099;
"1201
[; ;pic16f628a.h: 1201: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f628a.h: 1206: extern volatile unsigned char EEDATA @ 0x09A;
"1208
[; ;pic16f628a.h: 1208: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f628a.h: 1213: extern volatile unsigned char EEADR @ 0x09B;
"1215
[; ;pic16f628a.h: 1215: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f628a.h: 1220: extern volatile unsigned char EECON1 @ 0x09C;
"1222
[; ;pic16f628a.h: 1222: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f628a.h: 1225: typedef union {
[; ;pic16f628a.h: 1226: struct {
[; ;pic16f628a.h: 1227: unsigned RD :1;
[; ;pic16f628a.h: 1228: unsigned WR :1;
[; ;pic16f628a.h: 1229: unsigned WREN :1;
[; ;pic16f628a.h: 1230: unsigned WRERR :1;
[; ;pic16f628a.h: 1231: };
[; ;pic16f628a.h: 1232: } EECON1bits_t;
[; ;pic16f628a.h: 1233: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic16f628a.h: 1258: extern volatile unsigned char EECON2 @ 0x09D;
"1260
[; ;pic16f628a.h: 1260: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f628a.h: 1265: extern volatile unsigned char VRCON @ 0x09F;
"1267
[; ;pic16f628a.h: 1267: asm("VRCON equ 09Fh");
[; <" VRCON equ 09Fh ;# ">
[; ;pic16f628a.h: 1270: typedef union {
[; ;pic16f628a.h: 1271: struct {
[; ;pic16f628a.h: 1272: unsigned VR :4;
[; ;pic16f628a.h: 1273: unsigned :1;
[; ;pic16f628a.h: 1274: unsigned VRR :1;
[; ;pic16f628a.h: 1275: unsigned VROE :1;
[; ;pic16f628a.h: 1276: unsigned VREN :1;
[; ;pic16f628a.h: 1277: };
[; ;pic16f628a.h: 1278: struct {
[; ;pic16f628a.h: 1279: unsigned VR0 :1;
[; ;pic16f628a.h: 1280: unsigned VR1 :1;
[; ;pic16f628a.h: 1281: unsigned VR2 :1;
[; ;pic16f628a.h: 1282: unsigned VR3 :1;
[; ;pic16f628a.h: 1283: };
[; ;pic16f628a.h: 1284: } VRCONbits_t;
[; ;pic16f628a.h: 1285: extern volatile VRCONbits_t VRCONbits @ 0x09F;
[; ;pic16f628a.h: 1335: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1337: extern volatile __bit ADEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1339: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f628a.h: 1341: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f628a.h: 1343: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f628a.h: 1345: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f628a.h: 1347: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f628a.h: 1349: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f628a.h: 1351: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f628a.h: 1353: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f628a.h: 1355: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f628a.h: 1357: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f628a.h: 1359: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f628a.h: 1361: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f628a.h: 1363: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f628a.h: 1365: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f628a.h: 1367: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f628a.h: 1369: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f628a.h: 1371: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f628a.h: 1373: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f628a.h: 1375: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f628a.h: 1377: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f628a.h: 1379: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f628a.h: 1381: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f628a.h: 1383: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f628a.h: 1385: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f628a.h: 1387: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f628a.h: 1389: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f628a.h: 1391: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f628a.h: 1393: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f628a.h: 1395: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f628a.h: 1397: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f628a.h: 1399: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f628a.h: 1401: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f628a.h: 1403: extern volatile __bit OSCF @ (((unsigned) &PCON)*8) + 3;
[; ;pic16f628a.h: 1405: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f628a.h: 1407: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f628a.h: 1409: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f628a.h: 1411: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f628a.h: 1413: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f628a.h: 1415: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f628a.h: 1417: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f628a.h: 1419: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f628a.h: 1421: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f628a.h: 1423: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f628a.h: 1425: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f628a.h: 1427: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f628a.h: 1429: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f628a.h: 1431: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f628a.h: 1433: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f628a.h: 1435: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f628a.h: 1437: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f628a.h: 1439: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f628a.h: 1441: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f628a.h: 1443: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f628a.h: 1445: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f628a.h: 1447: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f628a.h: 1449: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f628a.h: 1451: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f628a.h: 1453: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f628a.h: 1455: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f628a.h: 1457: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f628a.h: 1459: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f628a.h: 1461: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f628a.h: 1463: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f628a.h: 1465: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f628a.h: 1467: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f628a.h: 1469: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f628a.h: 1471: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f628a.h: 1473: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1475: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1477: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f628a.h: 1479: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f628a.h: 1481: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f628a.h: 1483: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f628a.h: 1485: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f628a.h: 1487: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f628a.h: 1489: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1491: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1493: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f628a.h: 1495: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f628a.h: 1497: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f628a.h: 1499: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f628a.h: 1501: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f628a.h: 1503: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f628a.h: 1505: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f628a.h: 1507: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f628a.h: 1509: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f628a.h: 1511: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f628a.h: 1513: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f628a.h: 1515: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f628a.h: 1517: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f628a.h: 1519: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f628a.h: 1521: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f628a.h: 1523: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f628a.h: 1525: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f628a.h: 1527: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f628a.h: 1529: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f628a.h: 1531: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f628a.h: 1533: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f628a.h: 1535: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f628a.h: 1537: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f628a.h: 1539: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f628a.h: 1541: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f628a.h: 1543: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f628a.h: 1545: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f628a.h: 1547: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f628a.h: 1549: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f628a.h: 1551: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f628a.h: 1553: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f628a.h: 1555: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f628a.h: 1557: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f628a.h: 1559: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f628a.h: 1561: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f628a.h: 1563: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f628a.h: 1565: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f628a.h: 1567: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f628a.h: 1569: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f628a.h: 1571: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f628a.h: 1573: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f628a.h: 1575: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f628a.h: 1577: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f628a.h: 1579: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f628a.h: 1581: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1583: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1585: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1587: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f628a.h: 1589: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f628a.h: 1591: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f628a.h: 1593: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f628a.h: 1595: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 142: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
"46 config_628A.h
[p x FOSC=HS ]
"47
[p x WDTE=OFF ]
"48
[p x PWRTE=ON ]
"49
[p x MCLRE=ON ]
"50
[p x BOREN=OFF ]
"51
[p x LVP=OFF ]
"52
[p x CPD=OFF ]
"53
[p x CP=OFF ]
[; ;atraso.h: 26: void atraso_ms(unsigned int valor);
[; ;lcd.h: 42: void lcd_init(void);
[; ;lcd.h: 43: void lcd_cmd(unsigned char val);
[; ;lcd.h: 44: void lcd_dat(unsigned char val);
[; ;lcd.h: 45: void lcd_str(const char* str);
[; ;teclado.h: 36: unsigned char tc_tecla(unsigned int timeout);
[; ;i2c.h: 31: void i2c_init(void);
[; ;i2c.h: 32: void i2c_start(void);
[; ;i2c.h: 33: void i2c_stop(void);
[; ;i2c.h: 34: void i2c_wb(unsigned char val);
[; ;i2c.h: 35: unsigned char i2c_rb(unsigned char ack);
[; ;i2c.h: 36: void i2c_acktst(unsigned char val);
[; ;eeprom_ext.h: 27: unsigned char e2pext_r(unsigned int addr);
[; ;eeprom_ext.h: 28: void e2pext_w(unsigned int addr, unsigned char val);
[; ;rtc.h: 26: extern volatile char date[10];
[; ;rtc.h: 27: extern volatile char time[10];
[; ;rtc.h: 29: void rtc_w(void);
[; ;rtc.h: 31: void rtc_r(void);
[; ;serial.h: 27: void serial_init(void);
[; ;serial.h: 28: void serial_tx(unsigned char val);
[; ;serial.h: 29: void serial_tx_str(const char* val);
[; ;serial.h: 30: unsigned char serial_rx(unsigned int timeout);
[v $root$_main `(v ~T0 @X0 0 e ]
"39 teste_b2.c
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;teste_b2.c: 39: void main() {
[e :U _main ]
[f ]
"40
[v _i `uc ~T0 @X0 1 a ]
[v _tmp `uc ~T0 @X0 1 a ]
[; ;teste_b2.c: 40: unsigned char i,tmp;
[; ;teste_b2.c: 42: CMCON=0x07;
"42
[e = _CMCON -> -> 7 `i `uc ]
[; ;teste_b2.c: 43: TRISA=0x30;
"43
[e = _TRISA -> -> 48 `i `uc ]
[; ;teste_b2.c: 44: TRISB=0xE7;
"44
[e = _TRISB -> -> 231 `i `uc ]
[; ;teste_b2.c: 46: PORTA=0xFE;
"46
[e = _PORTA -> -> 254 `i `uc ]
[; ;teste_b2.c: 47: PORTB=0x00;
"47
[e = _PORTB -> -> 0 `i `uc ]
[; ;teste_b2.c: 49: lcd_init();
"49
[e ( _lcd_init ..  ]
[; ;teste_b2.c: 51: i2c_init();
"51
[e ( _i2c_init ..  ]
[; ;teste_b2.c: 53: serial_init();
"53
[e ( _serial_init ..  ]
[; ;teste_b2.c: 56: lcd_cmd(0x01);
"56
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 57: lcd_cmd(0x80);
"57
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
[; ;teste_b2.c: 58: for(i=0;i<16;i++)
"58
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 52  ]
[e $U 53  ]
"59
[e :U 52 ]
[; ;teste_b2.c: 59: {
{
[; ;teste_b2.c: 60: lcd_dat('A'+i);
"60
[e ( _lcd_dat (1 -> + -> 65 `ui -> _i `ui `uc ]
"61
}
"58
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 52  ]
[e :U 53 ]
"61
}
[; ;teste_b2.c: 61: }
[; ;teste_b2.c: 62: lcd_cmd(0xC0);
"62
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
[; ;teste_b2.c: 63: for(i=0;i<16;i++)
"63
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 55  ]
[e $U 56  ]
"64
[e :U 55 ]
[; ;teste_b2.c: 64: {
{
[; ;teste_b2.c: 65: lcd_dat('a'+i);
"65
[e ( _lcd_dat (1 -> + -> 97 `ui -> _i `ui `uc ]
"66
}
"63
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 55  ]
[e :U 56 ]
"66
}
[; ;teste_b2.c: 66: }
[; ;teste_b2.c: 68: atraso_ms(200);
"68
[e ( _atraso_ms (1 -> -> 200 `i `ui ]
[; ;teste_b2.c: 69: lcd_cmd(0x01);
"69
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 70: lcd_cmd(0x80+3);
"70
[e ( _lcd_cmd (1 -> + -> 128 `i -> 3 `i `uc ]
[; ;teste_b2.c: 71: lcd_str("Teste LCD");
"71
[e ( _lcd_str (1 :s 1C ]
[; ;teste_b2.c: 73: for(i=32;i<128;i++)
"73
{
[e = _i -> -> 32 `i `uc ]
[e $ < -> _i `i -> 128 `i 58  ]
[e $U 59  ]
"74
[e :U 58 ]
[; ;teste_b2.c: 74: {
{
[; ;teste_b2.c: 75: if((i%16) == 0)lcd_cmd(0xC0);
"75
[e $ ! == % -> _i `i -> 16 `i -> 0 `i 61  ]
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
[e :U 61 ]
[; ;teste_b2.c: 76: lcd_dat(i);
"76
[e ( _lcd_dat (1 _i ]
[; ;teste_b2.c: 77: atraso_ms(50);
"77
[e ( _atraso_ms (1 -> -> 50 `i `ui ]
"78
}
"73
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 128 `i 58  ]
[e :U 59 ]
"78
}
[; ;teste_b2.c: 78: }
[; ;teste_b2.c: 80: atraso_ms(100);
"80
[e ( _atraso_ms (1 -> -> 100 `i `ui ]
[; ;teste_b2.c: 81: lcd_cmd(0x01);
"81
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 82: lcd_cmd(0x80+3);
"82
[e ( _lcd_cmd (1 -> + -> 128 `i -> 3 `i `uc ]
[; ;teste_b2.c: 83: lcd_str("Teste LCD");
"83
[e ( _lcd_str (1 :s 2C ]
[; ;teste_b2.c: 84: lcd_cmd(0xC0+7);
"84
[e ( _lcd_cmd (1 -> + -> 192 `i -> 7 `i `uc ]
[; ;teste_b2.c: 85: lcd_str("Ok");
"85
[e ( _lcd_str (1 :s 3C ]
[; ;teste_b2.c: 86: atraso_ms(500);
"86
[e ( _atraso_ms (1 -> -> 500 `i `ui ]
[; ;teste_b2.c: 89: lcd_cmd(0x01);
"89
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 90: lcd_cmd(0x80+1);
"90
[e ( _lcd_cmd (1 -> + -> 128 `i -> 1 `i `uc ]
[; ;teste_b2.c: 91: lcd_str("Teste LEDs");
"91
[e ( _lcd_str (1 :s 4C ]
[; ;teste_b2.c: 93: for(i=0;i<4;i++)
"93
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 62  ]
[e $U 63  ]
"94
[e :U 62 ]
[; ;teste_b2.c: 94: {
{
[; ;teste_b2.c: 95: atraso_ms(100);
"95
[e ( _atraso_ms (1 -> -> 100 `i `ui ]
[; ;teste_b2.c: 96: RA1^=1;
"96
[e =^ _RA1 -> -> 1 `i `b ]
[; ;teste_b2.c: 97: atraso_ms(100);
"97
[e ( _atraso_ms (1 -> -> 100 `i `ui ]
[; ;teste_b2.c: 98: RA2^=1;
"98
[e =^ _RA2 -> -> 1 `i `b ]
[; ;teste_b2.c: 99: atraso_ms(100);
"99
[e ( _atraso_ms (1 -> -> 100 `i `ui ]
[; ;teste_b2.c: 100: PORTA^=0x40;
"100
[e =^ _PORTA -> -> 64 `i `uc ]
[; ;teste_b2.c: 101: atraso_ms(100);
"101
[e ( _atraso_ms (1 -> -> 100 `i `ui ]
[; ;teste_b2.c: 102: PORTA^=0x80;
"102
[e =^ _PORTA -> -> 128 `i `uc ]
[; ;teste_b2.c: 103: atraso_ms(100);
"103
[e ( _atraso_ms (1 -> -> 100 `i `ui ]
"104
}
"93
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 62  ]
[e :U 63 ]
"104
}
[; ;teste_b2.c: 104: }
[; ;teste_b2.c: 108: lcd_cmd(0x01);
"108
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 109: lcd_cmd(0x80+2);
"109
[e ( _lcd_cmd (1 -> + -> 128 `i -> 2 `i `uc ]
[; ;teste_b2.c: 110: lcd_str("Teste Teclado");
"110
[e ( _lcd_str (1 :s 5C ]
[; ;teste_b2.c: 112: lcd_cmd(0xC0+1);
"112
[e ( _lcd_cmd (1 -> + -> 192 `i -> 1 `i `uc ]
[; ;teste_b2.c: 114: i=0;
"114
[e = _i -> -> 0 `i `uc ]
[; ;teste_b2.c: 115: while(i<14)
"115
[e $U 65  ]
[e :U 66 ]
[; ;teste_b2.c: 116: {
"116
{
[; ;teste_b2.c: 117: lcd_dat(tc_tecla(3000)+0x30);
"117
[e ( _lcd_dat (1 -> + -> ( _tc_tecla (1 -> -> 3000 `i `ui `i -> 48 `i `uc ]
[; ;teste_b2.c: 118: i++;
"118
[e ++ _i -> -> 1 `i `uc ]
"119
}
[e :U 65 ]
"115
[e $ < -> _i `i -> 14 `i 66  ]
[e :U 67 ]
[; ;teste_b2.c: 119: }
[; ;teste_b2.c: 122: lcd_cmd(0x01);
"122
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 123: lcd_cmd(0x80);
"123
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
[; ;teste_b2.c: 124: lcd_str("Teste EEPROM EXT");
"124
[e ( _lcd_str (1 :s 6C ]
[; ;teste_b2.c: 126: lcd_cmd(0xC0);
"126
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
[; ;teste_b2.c: 127: lcd_str("Testar (1/0) ?");
"127
[e ( _lcd_str (1 :s 7C ]
[; ;teste_b2.c: 129: if(tc_tecla(0) == 1)
"129
[e $ ! == -> ( _tc_tecla (1 -> -> 0 `i `ui `i -> 1 `i 68  ]
[; ;teste_b2.c: 130: {
"130
{
[; ;teste_b2.c: 131: tmp=e2pext_r(10);
"131
[e = _tmp ( _e2pext_r (1 -> -> 10 `i `ui ]
[; ;teste_b2.c: 132: lcd_dat(tmp);
"132
[e ( _lcd_dat (1 _tmp ]
[; ;teste_b2.c: 134: e2pext_w(10,0xA5);
"134
[e ( _e2pext_w (2 , -> -> 10 `i `ui -> -> 165 `i `uc ]
[; ;teste_b2.c: 135: e2pext_w(10,0x5A);
"135
[e ( _e2pext_w (2 , -> -> 10 `i `ui -> -> 90 `i `uc ]
[; ;teste_b2.c: 136: i=e2pext_r(10);
"136
[e = _i ( _e2pext_r (1 -> -> 10 `i `ui ]
[; ;teste_b2.c: 138: e2pext_w(10,tmp);
"138
[e ( _e2pext_w (2 , -> -> 10 `i `ui _tmp ]
[; ;teste_b2.c: 140: lcd_cmd(0x01);
"140
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 141: lcd_cmd(0x80);
"141
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
[; ;teste_b2.c: 142: lcd_str("Teste EEPROM EXT");
"142
[e ( _lcd_str (1 :s 8C ]
[; ;teste_b2.c: 143: lcd_cmd(0xC0);
"143
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
[; ;teste_b2.c: 144: if(i == 0x5A)
"144
[e $ ! == -> _i `i -> 90 `i 69  ]
[; ;teste_b2.c: 145: lcd_str("     OK");
"145
[e ( _lcd_str (1 :s 9C ]
[e $U 70  ]
"146
[e :U 69 ]
[; ;teste_b2.c: 146: else
[; ;teste_b2.c: 147: lcd_str("     ERRO");
"147
[e ( _lcd_str (1 :s 10C ]
[e :U 70 ]
[; ;teste_b2.c: 149: atraso_ms(1000);
"149
[e ( _atraso_ms (1 -> -> 1000 `i `ui ]
"150
}
[e :U 68 ]
[; ;teste_b2.c: 150: }
[; ;teste_b2.c: 154: lcd_cmd(0x01);
"154
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 155: lcd_cmd(0x80);
"155
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
[; ;teste_b2.c: 156: lcd_str("Teste RTC");
"156
[e ( _lcd_str (1 :s 11C ]
[; ;teste_b2.c: 162: rtc_r();
"162
[e ( _rtc_r ..  ]
[; ;teste_b2.c: 163: lcd_cmd(0xC0);
"163
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
[; ;teste_b2.c: 164: lcd_str((char *)date);
"164
[e ( _lcd_str (1 -> -> &U _date `*uc `*Cuc ]
[; ;teste_b2.c: 165: atraso_ms(1500);
"165
[e ( _atraso_ms (1 -> -> 1500 `i `ui ]
[; ;teste_b2.c: 166: for(i=0;i<16;i++)
"166
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 71  ]
[e $U 72  ]
"167
[e :U 71 ]
[; ;teste_b2.c: 167: {
{
[; ;teste_b2.c: 168: rtc_r();
"168
[e ( _rtc_r ..  ]
[; ;teste_b2.c: 169: lcd_cmd(0xC0);;
"169
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
[; ;teste_b2.c: 170: lcd_str((char *)time);
"170
[e ( _lcd_str (1 -> -> &U _time `*uc `*Cuc ]
[; ;teste_b2.c: 171: atraso_ms(500);
"171
[e ( _atraso_ms (1 -> -> 500 `i `ui ]
"172
}
"166
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 71  ]
[e :U 72 ]
"172
}
[; ;teste_b2.c: 172: }
[; ;teste_b2.c: 178: lcd_cmd(0x01);
"178
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 179: lcd_cmd(0x80);
"179
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
[; ;teste_b2.c: 180: lcd_str("Teste Serial");
"180
[e ( _lcd_str (1 :s 12C ]
[; ;teste_b2.c: 182: lcd_cmd(0xC0);
"182
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
[; ;teste_b2.c: 183: lcd_str("Testar (1/0) ?");
"183
[e ( _lcd_str (1 :s 13C ]
[; ;teste_b2.c: 184: if(tc_tecla(0) == 1)
"184
[e $ ! == -> ( _tc_tecla (1 -> -> 0 `i `ui `i -> 1 `i 74  ]
[; ;teste_b2.c: 185: {
"185
{
[; ;teste_b2.c: 186: lcd_cmd(0x01);
"186
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 187: lcd_cmd(0x80);
"187
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
[; ;teste_b2.c: 188: lcd_str("Teste Serial TX");
"188
[e ( _lcd_str (1 :s 14C ]
[; ;teste_b2.c: 189: lcd_cmd(0xC0+2);
"189
[e ( _lcd_cmd (1 -> + -> 192 `i -> 2 `i `uc ]
[; ;teste_b2.c: 190: lcd_str("9600 8N1");
"190
[e ( _lcd_str (1 :s 15C ]
[; ;teste_b2.c: 192: serial_tx_str("\r\n Picsimlab\r\n Teste Serial TX\r\n");
"192
[e ( _serial_tx_str (1 :s 16C ]
[; ;teste_b2.c: 194: for(i=0;i<4;i++)
"194
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 75  ]
[e $U 76  ]
"195
[e :U 75 ]
[; ;teste_b2.c: 195: {
{
[; ;teste_b2.c: 196: serial_tx(i+0x30);
"196
[e ( _serial_tx (1 -> + -> _i `i -> 48 `i `uc ]
[; ;teste_b2.c: 197: serial_tx_str(" PicsimLab\r\n");
"197
[e ( _serial_tx_str (1 :s 17C ]
"198
}
"194
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 75  ]
[e :U 76 ]
"198
}
[; ;teste_b2.c: 198: }
[; ;teste_b2.c: 199: atraso_ms(1000);
"199
[e ( _atraso_ms (1 -> -> 1000 `i `ui ]
[; ;teste_b2.c: 201: lcd_cmd(0x01);
"201
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 202: lcd_cmd(0x80);
"202
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
[; ;teste_b2.c: 203: lcd_str("Teste Serial RX");
"203
[e ( _lcd_str (1 :s 18C ]
[; ;teste_b2.c: 204: serial_tx_str(" Digite!\r\n");
"204
[e ( _serial_tx_str (1 :s 19C ]
[; ;teste_b2.c: 205: for(i=0;i<32;i++)
"205
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 32 `i 78  ]
[e $U 79  ]
"206
[e :U 78 ]
[; ;teste_b2.c: 206: {
{
[; ;teste_b2.c: 207: if(!(i%16))
"207
[e $ ! ! != % -> _i `i -> 16 `i -> 0 `i 81  ]
[; ;teste_b2.c: 208: {
"208
{
[; ;teste_b2.c: 209: lcd_cmd(0xC0);
"209
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
[; ;teste_b2.c: 210: serial_tx_str("\r\n");
"210
[e ( _serial_tx_str (1 :s 20C ]
"211
}
[e :U 81 ]
[; ;teste_b2.c: 211: }
[; ;teste_b2.c: 212: tmp=serial_rx(3000);
"212
[e = _tmp ( _serial_rx (1 -> -> 3000 `i `ui ]
[; ;teste_b2.c: 213: lcd_dat(tmp);
"213
[e ( _lcd_dat (1 _tmp ]
[; ;teste_b2.c: 214: serial_tx(tmp);
"214
[e ( _serial_tx (1 _tmp ]
"215
}
"205
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 32 `i 78  ]
[e :U 79 ]
"215
}
[; ;teste_b2.c: 215: }
[; ;teste_b2.c: 216: atraso_ms(100);
"216
[e ( _atraso_ms (1 -> -> 100 `i `ui ]
[; ;teste_b2.c: 219: lcd_cmd(0x01);
"219
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 220: lcd_cmd(0x80);
"220
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
[; ;teste_b2.c: 221: lcd_str("Teste Teclado TX");
"221
[e ( _lcd_str (1 :s 21C ]
[; ;teste_b2.c: 222: serial_tx_str("\r\n Aguarde!\r\n");
"222
[e ( _serial_tx_str (1 :s 22C ]
[; ;teste_b2.c: 223: for(i=0;i<32;i++)
"223
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 32 `i 82  ]
[e $U 83  ]
"224
[e :U 82 ]
[; ;teste_b2.c: 224: {
{
[; ;teste_b2.c: 225: if(!(i%16))
"225
[e $ ! ! != % -> _i `i -> 16 `i -> 0 `i 85  ]
[; ;teste_b2.c: 226: {
"226
{
[; ;teste_b2.c: 227: lcd_cmd(0xC0);
"227
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
[; ;teste_b2.c: 228: serial_tx_str("\r\n");
"228
[e ( _serial_tx_str (1 :s 23C ]
"229
}
[e :U 85 ]
[; ;teste_b2.c: 229: }
[; ;teste_b2.c: 230: tmp=tc_tecla(2000)+0x30;
"230
[e = _tmp -> + -> ( _tc_tecla (1 -> -> 2000 `i `ui `i -> 48 `i `uc ]
[; ;teste_b2.c: 231: lcd_dat(tmp);
"231
[e ( _lcd_dat (1 _tmp ]
[; ;teste_b2.c: 232: serial_tx(tmp);
"232
[e ( _serial_tx (1 _tmp ]
"233
}
"223
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 32 `i 82  ]
[e :U 83 ]
"233
}
[; ;teste_b2.c: 233: }
[; ;teste_b2.c: 234: atraso_ms(100);
"234
[e ( _atraso_ms (1 -> -> 100 `i `ui ]
"235
}
[e :U 74 ]
[; ;teste_b2.c: 235: }
[; ;teste_b2.c: 238: lcd_cmd(0x01);
"238
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
[; ;teste_b2.c: 239: lcd_cmd(0x80+4);
"239
[e ( _lcd_cmd (1 -> + -> 128 `i -> 4 `i `uc ]
[; ;teste_b2.c: 240: lcd_str("Fim");
"240
[e ( _lcd_str (1 :s 24C ]
[; ;teste_b2.c: 241: lcd_cmd(0xC0+1);
"241
[e ( _lcd_cmd (1 -> + -> 192 `i -> 1 `i `uc ]
[; ;teste_b2.c: 242: lcd_str("Pressione RST");
"242
[e ( _lcd_str (1 :s 25C ]
[; ;teste_b2.c: 244: serial_tx_str("\r\n FIM!\r\n");
"244
[e ( _serial_tx_str (1 :s 26C ]
[; ;teste_b2.c: 246: while(1);
"246
[e :U 87 ]
[e :U 86 ]
[e $U 87  ]
[e :U 88 ]
[; ;teste_b2.c: 249: }
"249
[e :UE 51 ]
}
[a 4C 84 101 115 116 101 32 76 69 68 115 0 ]
[a 5C 84 101 115 116 101 32 84 101 99 108 97 100 111 0 ]
[a 24C 70 105 109 0 ]
[a 12C 84 101 115 116 101 32 83 101 114 105 97 108 0 ]
[a 3C 79 107 0 ]
[a 21C 84 101 115 116 101 32 84 101 99 108 97 100 111 32 84 88 0 ]
[a 14C 84 101 115 116 101 32 83 101 114 105 97 108 32 84 88 0 ]
[a 18C 84 101 115 116 101 32 83 101 114 105 97 108 32 82 88 0 ]
[a 6C 84 101 115 116 101 32 69 69 80 82 79 77 32 69 88 84 0 ]
[a 8C 84 101 115 116 101 32 69 69 80 82 79 77 32 69 88 84 0 ]
[a 25C 80 114 101 115 115 105 111 110 101 32 82 83 84 0 ]
[a 10C 32 32 32 32 32 69 82 82 79 0 ]
[a 9C 32 32 32 32 32 79 75 0 ]
[a 1C 84 101 115 116 101 32 76 67 68 0 ]
[a 2C 84 101 115 116 101 32 76 67 68 0 ]
[a 11C 84 101 115 116 101 32 82 84 67 0 ]
[a 7C 84 101 115 116 97 114 32 40 49 47 48 41 32 63 0 ]
[a 13C 84 101 115 116 97 114 32 40 49 47 48 41 32 63 0 ]
[a 15C 57 54 48 48 32 56 78 49 0 ]
[a 17C 32 80 105 99 115 105 109 76 97 98 13 10 0 ]
[a 16C 13 10 32 80 105 99 115 105 109 108 97 98 13 10 32 84 101 115 116 101 32 83 101 114 105 97 108 32 84 88 13 10 0 ]
[a 19C 32 68 105 103 105 116 101 33 13 10 0 ]
[a 22C 13 10 32 65 103 117 97 114 100 101 33 13 10 0 ]
[a 26C 13 10 32 70 73 77 33 13 10 0 ]
[a 20C 13 10 0 ]
[a 23C 13 10 0 ]
